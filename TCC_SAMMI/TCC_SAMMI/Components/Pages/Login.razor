@using Newtonsoft.Json
@rendermode InteractiveServer
@page "/Login"

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lilita+One&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap" rel="stylesheet">

<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap" Gap="1rem" Class="rz-p-sm-12" style="margin-top: -40px;">
        <RadzenLabel Text="Você Está de Volta!" Style="font-family: 'Lilita One', sans-serif; font-size: 36px; margin-bottom: 30px; text-align: center; width: 100%;" />
        <RadzenFormField Text="Usuário" Variant="Variant.Outlined" Style="font-family: 'Ubuntu', sans-serif;">
            <ChildContent>
                <RadzenTextBox @bind-Value="@value" />
            </ChildContent>
            <End>
                <RadzenIcon Icon="account_circle" />
            </End>
        </RadzenFormField>
        <RadzenFormField Text="Senha" Variant="Variant.Outlined" Style="font-family: 'Ubuntu', sans-serif;">
            <ChildContent>
                <RadzenTextBox @bind-Value="@passwordValue" Visible="@(!password)" />
                <RadzenPassword @bind-Value="@passwordValue" Visible="@password" />
            </ChildContent>
            <End>
                <RadzenButton Icon="@(password ? "visibility" : "visibility_off")" Click="TogglePassword" Variant="Variant.Text" Size="ButtonSize.Small" Style="color: black;" />
            </End>
        </RadzenFormField>

    </RadzenStack>

    @if (showalert)
    {
        <RadzenAlert AlertStyle="@(alerttype)" Variant="Variant.Flat" Shade="Shade.Lighter">
            @alertmsg
        </RadzenAlert>
    }

    <div class="rz-p-12 rz-text-align-center" style="padding: 1rem!important;">
        <RadzenSwitch @bind-Value=@sw Change=@(args => OnChange(args, "Switch")) InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})"/>
        <RadzenLabel Text="Me mantenha logado" Component="CheckBox1" Style="margin-left: 8px; vertical-align: middle; font-family: 'Ubuntu', sans-serif;"/>
    </div>

    <div class="rz-p-12 rz-text-align-center" style="padding: 1rem!important;">
        <RadzenButton Variant="Variant.Flat" Click=@(() => logar()) Text="Logar" Style="font-family: 'Ubuntu', sans-serif; background-color: #217011" ButtonStyle="ButtonStyle.Primary" />
    </div>

    <div class="rz-p-12 rz-text-align-center" style="padding: 1rem!important;">
        <a href="/Cadastro"
            <RadzenLabel Path="Login" Text="Ainda não possui uma conta? Cadastre-se agora!" Style="font-family: 'Ubuntu', sans-serif;  cursor: pointer; color: black"/>
        </a>
        </div>
</RadzenCard>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    bool sw;
    bool flag;
    string value = "";
    string passwordValue = "";
    bool password = true;
    bool showalert = false;
    string alertmsg;
    AlertStyle alerttype; //Warning, Success, Info, Danger

    public void logar()
    {
        // Controller con = new Controller();
        var list = new List<Usuario>();

        bool achou = false;

        foreach (var user in list)
        {
            if (user.nome == this.value && user.senha == this.passwordValue)
            {
                achou = !achou;
                // con.logar(user);

                this.alerttype = AlertStyle.Success;
                this.alertmsg = "Bem-vindo(a) " + user.nome;
                this.showalert = !this.showalert;

                NavigationManager.NavigateTo("/");
                break;
            }
        }

        if (!achou)
        {
            this.alerttype = AlertStyle.Danger;
            this.alertmsg = "Login ou senha invalida";
            this.showalert = !this.showalert;
        }
    }

    void OnChange(bool a, string txt)
    {
        //nothing
    }

    void TogglePassword()
    {
        password = !password;
    }
}